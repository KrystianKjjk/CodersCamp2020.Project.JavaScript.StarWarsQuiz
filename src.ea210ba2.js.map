{"version":3,"sources":["node_modules/regenerator-runtime/runtime.js","src/app/Consts.js","src/app/logic/UserRankInLocalStorage/UserRankInLocalStorage.js","src/app/uicomponents/ModalWindow/ModalWindow.js","src/app/uicomponents/QuizGameMode/NoModeSelectedModal.js","src/app/Ranking.js","src/app/uicomponents/MainMenu/GenerateRanking.js","src/app/uicomponents/MainMenuOptions/RulesRankingButtonTexts.js","src/app/uicomponents/MainMenuOptions/MainMenuOptions.js","src/app/uicomponents/LogoStarWars/LogoStarWars.js","src/app/uicomponents/PeopleImageToRecognize/PeopleImageToRecognize.js","src/app/uicomponents/GameModeName/GameModeName.js","src/app/GameRules.js","src/app/ConstRulesTexts.js","src/app/uicomponents/MainMenu/GenerateModeNameAndRules.js","src/app/uicomponents/RedButton/RedButton.js","src/app/uicomponents/WhiteIconButton/WhiteIconButton.js","src/app/apiconnection/PeopleClient.js","src/app/apiconnection/StarshipsClient.js","src/app/apiconnection/VehiclesClient.js","src/app/logic/questionsGenerator/QuestionsGenerator.js","src/app/uicomponents/MainMenu/GetSampleImage.js","src/app/uicomponents/MainMenu/ApikeyModal.js","src/app/uicomponents/MainMenu/MainMenu.js","src/app/uicomponents/TextTimer/TextTimer.js","src/app/uicomponents/LightsaberTimer/LightsaberTimer.js","src/app/AnswersComponent.js","src/app/logic/AnswerCorrectness/JaroWrinker.js","src/app/logic/AnswerCorrectness/AnswerCorrectness.js","src/app/logic/Players/HumanPlayer.js","src/app/logic/Players/ComputerPlayer/ComputerPlayer.js","src/app/uicomponents/GameOverModalWindowContent/Errors.js","src/app/uicomponents/GameOverModalWindowContent/GameOverModalWindowContent.js","src/app/googlevision/ImageRecognition/Errors.js","node_modules/cross-fetch/dist/browser-ponyfill.js","src/app/googlevision/ImageRecognition/GoogleClient.js","src/app/googlevision/ImageRecognition/ImageRecognition.js","src/app/logic/Players/GooglePlayer/GooglePlayer.js","src/app/logic/LaunchTheGame/LaunchTheGame.js","src/app/uicomponents/QuizGameMode/QuizGameMode.js","src/app/App.js","src/index.js"],"names":["GameModes","PEOPLE","STARSHIPS","VEHICLES","StartMode","MODES","Object","values","addUserRankInLocalStorage","obj","gameMode","userName","numberOfCorrectAnswers","numberOfTotalAnswers","Error","includes","arrayOfUsersAndScores","JSON","parse","localStorage","getItem","userAndScore","CreateUserAndScoreObject","setItem","stringify","doesUserExist","push","getUserRankInLocalStorage","modalWindow","component","closeWindow","HTMLElement","backgroundDiv","document","createElement","modalWindowDiv","appendChild","className","classList","add","addEventListener","e","stopPropagation","target","noModeSelectedModal","modeNotSelectedMessage","innerHTML","style","padding","color","backgroundColor","textAlign","fontSize","body","removeModalWindow","removeChild","querySelector","displayRanking","listOfUsers","sort","a","b","length","pop","ranking","id","titleDiv","image","title","innerText","place","player","answered","places","forEach","user","index","placeP","playerP","pointsP","percentageScore","Math","round","generateRankingContainer","selectedMode","error","rankingData","emptyRanking","emptyRankingText","RULESRANKING","RankingDisplayed","RulesDisplayed","createMainMenuOptions","optionFunction","options","mainMenuDiv","menuButton","buttonText","menuButtonOnclick","event","buttons","querySelectorAll","i","contains","remove","modeName","generatedNameAndRules","parentNode","oldNameDiv","oldRulesDiv","currentSelection","replaceChild","nameModeDiv","rulesDiv","property","createTextNode","logoStarWars","logo","logoLink","href","logoImg","src","alt","peopleImageToRecognize","base64","img","createGameModeName","people","vehicles","starships","gameModeNameDiv","textContent","start","displayText","text","gameRules","headerDiv","header","rules","RULESTEXTS","PEOPLERULES","VEHICLESRULES","STARSHIPSRULES","DEFAULTRULES","generateModeNameAndRules","ruleText","modeNameAndRules","redButton","label","onClick","runGameFunction","button","whiteIconButton","icon","labelElement","labelElementContent","getPersonById","fetch","person","json","getPersonImageBlobById","personId","blob","getStarshipById","starship","getStarshipImageBlobById","starshipId","getVehicleById","vehicle","getVehicleImageBlobById","vehicleId","generateQuestions","allowedIds","personAmount","excludedId","Promise","questionsIds","drawQuestionsIds","all","peopleArray","answers","map","name","drawCorrectAnswer","correctAnswer","correctAnswerId","rightAnswer","imageBlob","starshipsArray","vehiclesArray","convertBlobToBase64","questionObject","imageBase64","allowedIdArray","chosenIds","randomNumberIndex","floor","random","splice","resolve","reader","FileReader","readAsDataURL","onloadend","base64data","result","substr","indexOf","questionsNames","correctAnswerIdIndex","returnImageBase64","apikeyModal","gamefunction","mode","modalWindowContent","textInput","type","required","placeholder","inputDescription","submitButton","apikey","value","mainMenu","runGameMode","mainsection","mainMenuOptions","startImage","imageToRecognize","nameRulesRanking","rulesRankingButton","switchRuleswithRanking","playButton","buttonsSpacer","width","menuDiv","rankingDiv","isModeButtonActive","generateTextTimerComponent","timerDiv","gameTime","changeTimeFormatAndSaveIntoDiv","interval","setInterval","clearInterval","timeObject","convertGameTimeToMinutesAndSeconds","minutes","seconds","gameTimeInSeconds","generateLightsaberTimerComponent","lightsaberDiv","createLightsaberElement","progressDiv","initialWidthOfProgressBar","totalGameTime","handleDiv","handleImage","saberDiv","displayAnswersComponent","possibleAnswers","callback","answer","maxLengthOfDisplayedAnswer","isAnswered","givenAnswer","createAnswersComponent","numberOfButtons","answersComponent","JaroWrinker","s1","s2","m","range","max","s1Matches","Array","s2Matches","low","high","j","k","n_trans","weight","l","answerCorrectness","similarity","createPlayer","HumanPlayer","_name","_points","_askedQuestions","_activeQuestion","_answers","question","callbacks","isArray","points","_giveAnswerCallbacks","getPoints","getAnswers","getAskedQuestions","onGiveAnswerDo","callbacksArray","some","answerQuestion","_giveRandomAnswer","FIRST_ARG_ERROR","SECOND_ARG_ERROR","gameOverModalWindowContent","every","human","computer","correct","gameOverH2","gameOverParagraph","humanCorrect","filter","computerCorrect","mainGrid","listDiv","listHeader","scrollableList","join","yodaImage","parentElement","click","FIRST_ARGUMENT_WRONG","SECOND_ARGUMENT_WRONG","getLabel","base64Image","apiKey","REQUEST_URL","ENDPOINT","requestJSON","MAX_RESULTS","method","response","imageRecognition","code","message","responses","webDetection","webEntities","description","_apiKey","launchGame","handleUserAnswer","generateQuestionsAndReplaceImage","imageDiv","hasChildNodes","lastChild","images","correctAnswers","humanPlayer","askQuestion","computerPlayer","setTimeout","answersAndImages","createArrayOfObjectsWithAnswersAndImage","modalContent","saveInLocalStorageAndReload","objArray","computerAnswers","humanAnswers","answersHistory","location","reload","quizGameMode","saberAndTimerContainer","mainSection","answersTargetContainer","answersContainer","mainMenuButtons","newMainMenuButtons","cloneNode","console","log","App","window","onload"],"mappings":"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","file":"src.ea210ba2.js","sourceRoot":"..","sourcesContent":["/**\n * Copyright (c) 2014-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nvar runtime = (function (exports) {\n  \"use strict\";\n\n  var Op = Object.prototype;\n  var hasOwn = Op.hasOwnProperty;\n  var undefined; // More compressible than void 0.\n  var $Symbol = typeof Symbol === \"function\" ? Symbol : {};\n  var iteratorSymbol = $Symbol.iterator || \"@@iterator\";\n  var asyncIteratorSymbol = $Symbol.asyncIterator || \"@@asyncIterator\";\n  var toStringTagSymbol = $Symbol.toStringTag || \"@@toStringTag\";\n\n  function define(obj, key, value) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n    return obj[key];\n  }\n  try {\n    // IE 8 has a broken Object.defineProperty that only works on DOM objects.\n    define({}, \"\");\n  } catch (err) {\n    define = function(obj, key, value) {\n      return obj[key] = value;\n    };\n  }\n\n  function wrap(innerFn, outerFn, self, tryLocsList) {\n    // If outerFn provided and outerFn.prototype is a Generator, then outerFn.prototype instanceof Generator.\n    var protoGenerator = outerFn && outerFn.prototype instanceof Generator ? outerFn : Generator;\n    var generator = Object.create(protoGenerator.prototype);\n    var context = new Context(tryLocsList || []);\n\n    // The ._invoke method unifies the implementations of the .next,\n    // .throw, and .return methods.\n    generator._invoke = makeInvokeMethod(innerFn, self, context);\n\n    return generator;\n  }\n  exports.wrap = wrap;\n\n  // Try/catch helper to minimize deoptimizations. Returns a completion\n  // record like context.tryEntries[i].completion. This interface could\n  // have been (and was previously) designed to take a closure to be\n  // invoked without arguments, but in all the cases we care about we\n  // already have an existing method we want to call, so there's no need\n  // to create a new function object. We can even get away with assuming\n  // the method takes exactly one argument, since that happens to be true\n  // in every case, so we don't have to touch the arguments object. The\n  // only additional allocation required is the completion record, which\n  // has a stable shape and so hopefully should be cheap to allocate.\n  function tryCatch(fn, obj, arg) {\n    try {\n      return { type: \"normal\", arg: fn.call(obj, arg) };\n    } catch (err) {\n      return { type: \"throw\", arg: err };\n    }\n  }\n\n  var GenStateSuspendedStart = \"suspendedStart\";\n  var GenStateSuspendedYield = \"suspendedYield\";\n  var GenStateExecuting = \"executing\";\n  var GenStateCompleted = \"completed\";\n\n  // Returning this object from the innerFn has the same effect as\n  // breaking out of the dispatch switch statement.\n  var ContinueSentinel = {};\n\n  // Dummy constructor functions that we use as the .constructor and\n  // .constructor.prototype properties for functions that return Generator\n  // objects. For full spec compliance, you may wish to configure your\n  // minifier not to mangle the names of these two functions.\n  function Generator() {}\n  function GeneratorFunction() {}\n  function GeneratorFunctionPrototype() {}\n\n  // This is a polyfill for %IteratorPrototype% for environments that\n  // don't natively support it.\n  var IteratorPrototype = {};\n  IteratorPrototype[iteratorSymbol] = function () {\n    return this;\n  };\n\n  var getProto = Object.getPrototypeOf;\n  var NativeIteratorPrototype = getProto && getProto(getProto(values([])));\n  if (NativeIteratorPrototype &&\n      NativeIteratorPrototype !== Op &&\n      hasOwn.call(NativeIteratorPrototype, iteratorSymbol)) {\n    // This environment has a native %IteratorPrototype%; use it instead\n    // of the polyfill.\n    IteratorPrototype = NativeIteratorPrototype;\n  }\n\n  var Gp = GeneratorFunctionPrototype.prototype =\n    Generator.prototype = Object.create(IteratorPrototype);\n  GeneratorFunction.prototype = Gp.constructor = GeneratorFunctionPrototype;\n  GeneratorFunctionPrototype.constructor = GeneratorFunction;\n  GeneratorFunction.displayName = define(\n    GeneratorFunctionPrototype,\n    toStringTagSymbol,\n    \"GeneratorFunction\"\n  );\n\n  // Helper for defining the .next, .throw, and .return methods of the\n  // Iterator interface in terms of a single ._invoke method.\n  function defineIteratorMethods(prototype) {\n    [\"next\", \"throw\", \"return\"].forEach(function(method) {\n      define(prototype, method, function(arg) {\n        return this._invoke(method, arg);\n      });\n    });\n  }\n\n  exports.isGeneratorFunction = function(genFun) {\n    var ctor = typeof genFun === \"function\" && genFun.constructor;\n    return ctor\n      ? ctor === GeneratorFunction ||\n        // For the native GeneratorFunction constructor, the best we can\n        // do is to check its .name property.\n        (ctor.displayName || ctor.name) === \"GeneratorFunction\"\n      : false;\n  };\n\n  exports.mark = function(genFun) {\n    if (Object.setPrototypeOf) {\n      Object.setPrototypeOf(genFun, GeneratorFunctionPrototype);\n    } else {\n      genFun.__proto__ = GeneratorFunctionPrototype;\n      define(genFun, toStringTagSymbol, \"GeneratorFunction\");\n    }\n    genFun.prototype = Object.create(Gp);\n    return genFun;\n  };\n\n  // Within the body of any async function, `await x` is transformed to\n  // `yield regeneratorRuntime.awrap(x)`, so that the runtime can test\n  // `hasOwn.call(value, \"__await\")` to determine if the yielded value is\n  // meant to be awaited.\n  exports.awrap = function(arg) {\n    return { __await: arg };\n  };\n\n  function AsyncIterator(generator, PromiseImpl) {\n    function invoke(method, arg, resolve, reject) {\n      var record = tryCatch(generator[method], generator, arg);\n      if (record.type === \"throw\") {\n        reject(record.arg);\n      } else {\n        var result = record.arg;\n        var value = result.value;\n        if (value &&\n            typeof value === \"object\" &&\n            hasOwn.call(value, \"__await\")) {\n          return PromiseImpl.resolve(value.__await).then(function(value) {\n            invoke(\"next\", value, resolve, reject);\n          }, function(err) {\n            invoke(\"throw\", err, resolve, reject);\n          });\n        }\n\n        return PromiseImpl.resolve(value).then(function(unwrapped) {\n          // When a yielded Promise is resolved, its final value becomes\n          // the .value of the Promise<{value,done}> result for the\n          // current iteration.\n          result.value = unwrapped;\n          resolve(result);\n        }, function(error) {\n          // If a rejected Promise was yielded, throw the rejection back\n          // into the async generator function so it can be handled there.\n          return invoke(\"throw\", error, resolve, reject);\n        });\n      }\n    }\n\n    var previousPromise;\n\n    function enqueue(method, arg) {\n      function callInvokeWithMethodAndArg() {\n        return new PromiseImpl(function(resolve, reject) {\n          invoke(method, arg, resolve, reject);\n        });\n      }\n\n      return previousPromise =\n        // If enqueue has been called before, then we want to wait until\n        // all previous Promises have been resolved before calling invoke,\n        // so that results are always delivered in the correct order. If\n        // enqueue has not been called before, then it is important to\n        // call invoke immediately, without waiting on a callback to fire,\n        // so that the async generator function has the opportunity to do\n        // any necessary setup in a predictable way. This predictability\n        // is why the Promise constructor synchronously invokes its\n        // executor callback, and why async functions synchronously\n        // execute code before the first await. Since we implement simple\n        // async functions in terms of async generators, it is especially\n        // important to get this right, even though it requires care.\n        previousPromise ? previousPromise.then(\n          callInvokeWithMethodAndArg,\n          // Avoid propagating failures to Promises returned by later\n          // invocations of the iterator.\n          callInvokeWithMethodAndArg\n        ) : callInvokeWithMethodAndArg();\n    }\n\n    // Define the unified helper method that is used to implement .next,\n    // .throw, and .return (see defineIteratorMethods).\n    this._invoke = enqueue;\n  }\n\n  defineIteratorMethods(AsyncIterator.prototype);\n  AsyncIterator.prototype[asyncIteratorSymbol] = function () {\n    return this;\n  };\n  exports.AsyncIterator = AsyncIterator;\n\n  // Note that simple async functions are implemented on top of\n  // AsyncIterator objects; they just return a Promise for the value of\n  // the final result produced by the iterator.\n  exports.async = function(innerFn, outerFn, self, tryLocsList, PromiseImpl) {\n    if (PromiseImpl === void 0) PromiseImpl = Promise;\n\n    var iter = new AsyncIterator(\n      wrap(innerFn, outerFn, self, tryLocsList),\n      PromiseImpl\n    );\n\n    return exports.isGeneratorFunction(outerFn)\n      ? iter // If outerFn is a generator, return the full iterator.\n      : iter.next().then(function(result) {\n          return result.done ? result.value : iter.next();\n        });\n  };\n\n  function makeInvokeMethod(innerFn, self, context) {\n    var state = GenStateSuspendedStart;\n\n    return function invoke(method, arg) {\n      if (state === GenStateExecuting) {\n        throw new Error(\"Generator is already running\");\n      }\n\n      if (state === GenStateCompleted) {\n        if (method === \"throw\") {\n          throw arg;\n        }\n\n        // Be forgiving, per 25.3.3.3.3 of the spec:\n        // https://people.mozilla.org/~jorendorff/es6-draft.html#sec-generatorresume\n        return doneResult();\n      }\n\n      context.method = method;\n      context.arg = arg;\n\n      while (true) {\n        var delegate = context.delegate;\n        if (delegate) {\n          var delegateResult = maybeInvokeDelegate(delegate, context);\n          if (delegateResult) {\n            if (delegateResult === ContinueSentinel) continue;\n            return delegateResult;\n          }\n        }\n\n        if (context.method === \"next\") {\n          // Setting context._sent for legacy support of Babel's\n          // function.sent implementation.\n          context.sent = context._sent = context.arg;\n\n        } else if (context.method === \"throw\") {\n          if (state === GenStateSuspendedStart) {\n            state = GenStateCompleted;\n            throw context.arg;\n          }\n\n          context.dispatchException(context.arg);\n\n        } else if (context.method === \"return\") {\n          context.abrupt(\"return\", context.arg);\n        }\n\n        state = GenStateExecuting;\n\n        var record = tryCatch(innerFn, self, context);\n        if (record.type === \"normal\") {\n          // If an exception is thrown from innerFn, we leave state ===\n          // GenStateExecuting and loop back for another invocation.\n          state = context.done\n            ? GenStateCompleted\n            : GenStateSuspendedYield;\n\n          if (record.arg === ContinueSentinel) {\n            continue;\n          }\n\n          return {\n            value: record.arg,\n            done: context.done\n          };\n\n        } else if (record.type === \"throw\") {\n          state = GenStateCompleted;\n          // Dispatch the exception by looping back around to the\n          // context.dispatchException(context.arg) call above.\n          context.method = \"throw\";\n          context.arg = record.arg;\n        }\n      }\n    };\n  }\n\n  // Call delegate.iterator[context.method](context.arg) and handle the\n  // result, either by returning a { value, done } result from the\n  // delegate iterator, or by modifying context.method and context.arg,\n  // setting context.delegate to null, and returning the ContinueSentinel.\n  function maybeInvokeDelegate(delegate, context) {\n    var method = delegate.iterator[context.method];\n    if (method === undefined) {\n      // A .throw or .return when the delegate iterator has no .throw\n      // method always terminates the yield* loop.\n      context.delegate = null;\n\n      if (context.method === \"throw\") {\n        // Note: [\"return\"] must be used for ES3 parsing compatibility.\n        if (delegate.iterator[\"return\"]) {\n          // If the delegate iterator has a return method, give it a\n          // chance to clean up.\n          context.method = \"return\";\n          context.arg = undefined;\n          maybeInvokeDelegate(delegate, context);\n\n          if (context.method === \"throw\") {\n            // If maybeInvokeDelegate(context) changed context.method from\n            // \"return\" to \"throw\", let that override the TypeError below.\n            return ContinueSentinel;\n          }\n        }\n\n        context.method = \"throw\";\n        context.arg = new TypeError(\n          \"The iterator does not provide a 'throw' method\");\n      }\n\n      return ContinueSentinel;\n    }\n\n    var record = tryCatch(method, delegate.iterator, context.arg);\n\n    if (record.type === \"throw\") {\n      context.method = \"throw\";\n      context.arg = record.arg;\n      context.delegate = null;\n      return ContinueSentinel;\n    }\n\n    var info = record.arg;\n\n    if (! info) {\n      context.method = \"throw\";\n      context.arg = new TypeError(\"iterator result is not an object\");\n      context.delegate = null;\n      return ContinueSentinel;\n    }\n\n    if (info.done) {\n      // Assign the result of the finished delegate to the temporary\n      // variable specified by delegate.resultName (see delegateYield).\n      context[delegate.resultName] = info.value;\n\n      // Resume execution at the desired location (see delegateYield).\n      context.next = delegate.nextLoc;\n\n      // If context.method was \"throw\" but the delegate handled the\n      // exception, let the outer generator proceed normally. If\n      // context.method was \"next\", forget context.arg since it has been\n      // \"consumed\" by the delegate iterator. If context.method was\n      // \"return\", allow the original .return call to continue in the\n      // outer generator.\n      if (context.method !== \"return\") {\n        context.method = \"next\";\n        context.arg = undefined;\n      }\n\n    } else {\n      // Re-yield the result returned by the delegate method.\n      return info;\n    }\n\n    // The delegate iterator is finished, so forget it and continue with\n    // the outer generator.\n    context.delegate = null;\n    return ContinueSentinel;\n  }\n\n  // Define Generator.prototype.{next,throw,return} in terms of the\n  // unified ._invoke helper method.\n  defineIteratorMethods(Gp);\n\n  define(Gp, toStringTagSymbol, \"Generator\");\n\n  // A Generator should always return itself as the iterator object when the\n  // @@iterator function is called on it. Some browsers' implementations of the\n  // iterator prototype chain incorrectly implement this, causing the Generator\n  // object to not be returned from this call. This ensures that doesn't happen.\n  // See https://github.com/facebook/regenerator/issues/274 for more details.\n  Gp[iteratorSymbol] = function() {\n    return this;\n  };\n\n  Gp.toString = function() {\n    return \"[object Generator]\";\n  };\n\n  function pushTryEntry(locs) {\n    var entry = { tryLoc: locs[0] };\n\n    if (1 in locs) {\n      entry.catchLoc = locs[1];\n    }\n\n    if (2 in locs) {\n      entry.finallyLoc = locs[2];\n      entry.afterLoc = locs[3];\n    }\n\n    this.tryEntries.push(entry);\n  }\n\n  function resetTryEntry(entry) {\n    var record = entry.completion || {};\n    record.type = \"normal\";\n    delete record.arg;\n    entry.completion = record;\n  }\n\n  function Context(tryLocsList) {\n    // The root entry object (effectively a try statement without a catch\n    // or a finally block) gives us a place to store values thrown from\n    // locations where there is no enclosing try statement.\n    this.tryEntries = [{ tryLoc: \"root\" }];\n    tryLocsList.forEach(pushTryEntry, this);\n    this.reset(true);\n  }\n\n  exports.keys = function(object) {\n    var keys = [];\n    for (var key in object) {\n      keys.push(key);\n    }\n    keys.reverse();\n\n    // Rather than returning an object with a next method, we keep\n    // things simple and return the next function itself.\n    return function next() {\n      while (keys.length) {\n        var key = keys.pop();\n        if (key in object) {\n          next.value = key;\n          next.done = false;\n          return next;\n        }\n      }\n\n      // To avoid creating an additional object, we just hang the .value\n      // and .done properties off the next function object itself. This\n      // also ensures that the minifier will not anonymize the function.\n      next.done = true;\n      return next;\n    };\n  };\n\n  function values(iterable) {\n    if (iterable) {\n      var iteratorMethod = iterable[iteratorSymbol];\n      if (iteratorMethod) {\n        return iteratorMethod.call(iterable);\n      }\n\n      if (typeof iterable.next === \"function\") {\n        return iterable;\n      }\n\n      if (!isNaN(iterable.length)) {\n        var i = -1, next = function next() {\n          while (++i < iterable.length) {\n            if (hasOwn.call(iterable, i)) {\n              next.value = iterable[i];\n              next.done = false;\n              return next;\n            }\n          }\n\n          next.value = undefined;\n          next.done = true;\n\n          return next;\n        };\n\n        return next.next = next;\n      }\n    }\n\n    // Return an iterator with no values.\n    return { next: doneResult };\n  }\n  exports.values = values;\n\n  function doneResult() {\n    return { value: undefined, done: true };\n  }\n\n  Context.prototype = {\n    constructor: Context,\n\n    reset: function(skipTempReset) {\n      this.prev = 0;\n      this.next = 0;\n      // Resetting context._sent for legacy support of Babel's\n      // function.sent implementation.\n      this.sent = this._sent = undefined;\n      this.done = false;\n      this.delegate = null;\n\n      this.method = \"next\";\n      this.arg = undefined;\n\n      this.tryEntries.forEach(resetTryEntry);\n\n      if (!skipTempReset) {\n        for (var name in this) {\n          // Not sure about the optimal order of these conditions:\n          if (name.charAt(0) === \"t\" &&\n              hasOwn.call(this, name) &&\n              !isNaN(+name.slice(1))) {\n            this[name] = undefined;\n          }\n        }\n      }\n    },\n\n    stop: function() {\n      this.done = true;\n\n      var rootEntry = this.tryEntries[0];\n      var rootRecord = rootEntry.completion;\n      if (rootRecord.type === \"throw\") {\n        throw rootRecord.arg;\n      }\n\n      return this.rval;\n    },\n\n    dispatchException: function(exception) {\n      if (this.done) {\n        throw exception;\n      }\n\n      var context = this;\n      function handle(loc, caught) {\n        record.type = \"throw\";\n        record.arg = exception;\n        context.next = loc;\n\n        if (caught) {\n          // If the dispatched exception was caught by a catch block,\n          // then let that catch block handle the exception normally.\n          context.method = \"next\";\n          context.arg = undefined;\n        }\n\n        return !! caught;\n      }\n\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        var record = entry.completion;\n\n        if (entry.tryLoc === \"root\") {\n          // Exception thrown outside of any try block that could handle\n          // it, so set the completion value of the entire function to\n          // throw the exception.\n          return handle(\"end\");\n        }\n\n        if (entry.tryLoc <= this.prev) {\n          var hasCatch = hasOwn.call(entry, \"catchLoc\");\n          var hasFinally = hasOwn.call(entry, \"finallyLoc\");\n\n          if (hasCatch && hasFinally) {\n            if (this.prev < entry.catchLoc) {\n              return handle(entry.catchLoc, true);\n            } else if (this.prev < entry.finallyLoc) {\n              return handle(entry.finallyLoc);\n            }\n\n          } else if (hasCatch) {\n            if (this.prev < entry.catchLoc) {\n              return handle(entry.catchLoc, true);\n            }\n\n          } else if (hasFinally) {\n            if (this.prev < entry.finallyLoc) {\n              return handle(entry.finallyLoc);\n            }\n\n          } else {\n            throw new Error(\"try statement without catch or finally\");\n          }\n        }\n      }\n    },\n\n    abrupt: function(type, arg) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.tryLoc <= this.prev &&\n            hasOwn.call(entry, \"finallyLoc\") &&\n            this.prev < entry.finallyLoc) {\n          var finallyEntry = entry;\n          break;\n        }\n      }\n\n      if (finallyEntry &&\n          (type === \"break\" ||\n           type === \"continue\") &&\n          finallyEntry.tryLoc <= arg &&\n          arg <= finallyEntry.finallyLoc) {\n        // Ignore the finally entry if control is not jumping to a\n        // location outside the try/catch block.\n        finallyEntry = null;\n      }\n\n      var record = finallyEntry ? finallyEntry.completion : {};\n      record.type = type;\n      record.arg = arg;\n\n      if (finallyEntry) {\n        this.method = \"next\";\n        this.next = finallyEntry.finallyLoc;\n        return ContinueSentinel;\n      }\n\n      return this.complete(record);\n    },\n\n    complete: function(record, afterLoc) {\n      if (record.type === \"throw\") {\n        throw record.arg;\n      }\n\n      if (record.type === \"break\" ||\n          record.type === \"continue\") {\n        this.next = record.arg;\n      } else if (record.type === \"return\") {\n        this.rval = this.arg = record.arg;\n        this.method = \"return\";\n        this.next = \"end\";\n      } else if (record.type === \"normal\" && afterLoc) {\n        this.next = afterLoc;\n      }\n\n      return ContinueSentinel;\n    },\n\n    finish: function(finallyLoc) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.finallyLoc === finallyLoc) {\n          this.complete(entry.completion, entry.afterLoc);\n          resetTryEntry(entry);\n          return ContinueSentinel;\n        }\n      }\n    },\n\n    \"catch\": function(tryLoc) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.tryLoc === tryLoc) {\n          var record = entry.completion;\n          if (record.type === \"throw\") {\n            var thrown = record.arg;\n            resetTryEntry(entry);\n          }\n          return thrown;\n        }\n      }\n\n      // The context.catch method must only be called with a location\n      // argument that corresponds to a known catch block.\n      throw new Error(\"illegal catch attempt\");\n    },\n\n    delegateYield: function(iterable, resultName, nextLoc) {\n      this.delegate = {\n        iterator: values(iterable),\n        resultName: resultName,\n        nextLoc: nextLoc\n      };\n\n      if (this.method === \"next\") {\n        // Deliberately forget the last sent value so that we don't\n        // accidentally pass it on to the delegate.\n        this.arg = undefined;\n      }\n\n      return ContinueSentinel;\n    }\n  };\n\n  // Regardless of whether this script is executing as a CommonJS module\n  // or not, return the runtime object so that we can declare the variable\n  // regeneratorRuntime in the outer scope, which allows this module to be\n  // injected easily by `bin/regenerator --include-runtime script.js`.\n  return exports;\n\n}(\n  // If this script is executing as a CommonJS module, use module.exports\n  // as the regeneratorRuntime namespace. Otherwise create a new empty\n  // object. Either way, the resulting object will be used to initialize\n  // the regeneratorRuntime variable at the top of this file.\n  typeof module === \"object\" ? module.exports : {}\n));\n\ntry {\n  regeneratorRuntime = runtime;\n} catch (accidentalStrictMode) {\n  // This module should not be running in strict mode, so the above\n  // assignment should always work unless something is misconfigured. Just\n  // in case runtime.js accidentally runs in strict mode, we can escape\n  // strict mode using a global Function call. This could conceivably fail\n  // if a Content Security Policy forbids using Function, but in that case\n  // the proper solution is to fix the accidental strict mode problem. If\n  // you've misconfigured your bundler to force strict mode and applied a\n  // CSP to forbid Function, and you're not willing to fix either of those\n  // problems, please detail your unique predicament in a GitHub issue.\n  Function(\"r\", \"regeneratorRuntime = r\")(runtime);\n}\n","const GameModes = {\n    PEOPLE: \"People\",\n    STARSHIPS: \"Starships\",\n    VEHICLES: \"Vehicles\"\n}\n\nconst StartMode = 'Default';\n\n\nexport {GameModes, StartMode};","import {GameModes} from '../../Consts.js';\n//FS change - modify object from Justynas function to be array of properties values\nconst MODES = Object.values(GameModes);\n\n\n/* ---------addUserRankInLocalStorage-------------\n  Function takes object:\n\n  obj = {\n    gameMode: string,\n    userName: string,\n    numberOfCorrectAnswers: number,\n    numberOfTotalAnswers: number,\n   }\n   --------------------------------------------- */\n\nfunction addUserRankInLocalStorage(obj) {\n  //checks if passed arguments are correct\n  if( typeof obj.gameMode !== 'string'\n      || typeof obj.userName !== 'string'\n      || typeof obj.numberOfCorrectAnswers !== 'number'\n      || typeof obj.numberOfTotalAnswers !== 'number' ) throw Error('Incorrect type of arguments.');\n\n  //check if the mode of the game is correct\n  if( !MODES.includes(obj.gameMode) ) throw Error('Incorrect game mode.');\n\n  //if gameMode doesn't exist in the localstorage create it\n  let arrayOfUsersAndScores = JSON.parse(localStorage.getItem(obj.gameMode));\n  if(arrayOfUsersAndScores === null) {\n    let userAndScore = [new CreateUserAndScoreObject(obj.userName, obj.numberOfCorrectAnswers, obj.numberOfTotalAnswers)];\n    localStorage.setItem(obj.gameMode,JSON.stringify(userAndScore));\n  }\n  else {\n    let doesUserExist = false;\n    //check if user exists\n    for(let userAndScore of arrayOfUsersAndScores) {\n      if(userAndScore.userName === obj.userName) {\n        //if user exists overwrite his score\n        userAndScore.numberOfCorrectAnswers = obj.numberOfCorrectAnswers;\n        userAndScore.numberOfTotalAnswers = obj.numberOfTotalAnswers;\n        doesUserExist = true;\n      }\n    }\n    //if user doesn't exists create one\n    if(!doesUserExist) {\n      let userAndScore = new CreateUserAndScoreObject(obj.userName, obj.numberOfCorrectAnswers, obj.numberOfTotalAnswers);\n      arrayOfUsersAndScores.push(userAndScore);\n    }\n    localStorage.setItem(obj.gameMode,JSON.stringify(arrayOfUsersAndScores));\n  }\n}\n\n/* --------------getUserRankInLocalStorage-------------------------\n    Function returns an empty object\n    if in the localstorage doesn't exist selected gameMode.\n    Otherwise function returns array of objects:\n\n    obj = {\n      userName: string,\n      numberOfCorrectAnswers: number,\n      numberOfTotalAnswers: number\n    }\n    -------------------------------------------------------------*/\n\nfunction getUserRankInLocalStorage(gameMode) {\n  //check if the mode of the game is correct\n  if( !MODES.includes(gameMode) ) throw Error('Incorrect game mode.');\n\n  let arrayOfUsersAndScores = JSON.parse(localStorage.getItem(gameMode));\n\n  return arrayOfUsersAndScores === null ? {} : arrayOfUsersAndScores;\n}\n\n\nfunction CreateUserAndScoreObject(userName, numberOfCorrectAnswers, numberOfTotalAnswers) {\n  this.userName = userName;\n  this.numberOfCorrectAnswers = numberOfCorrectAnswers;\n  this.numberOfTotalAnswers = numberOfTotalAnswers;\n}\n\nexport { addUserRankInLocalStorage, getUserRankInLocalStorage }\n","function modalWindow(component, closeWindow) {\n    if ( !(component instanceof HTMLElement) ){\n        throw Error('First argument should be HTMLElement.');\n    }\n    if ( !(typeof closeWindow === 'function') ){\n        throw Error('Second argument should be Function.');\n    }\n    const backgroundDiv = document.createElement('div');\n    const modalWindowDiv = document.createElement('div');\n    backgroundDiv.appendChild(modalWindowDiv);\n    modalWindowDiv.appendChild(component);\n    backgroundDiv.className = 'modal-window-bg';\n    modalWindowDiv.classList.add('border', 'modal-window');\n    backgroundDiv.addEventListener('click', (e) => {\n        e.stopPropagation();\n        if(e.target === backgroundDiv){\n            closeWindow();\n        }\n    })\n    return backgroundDiv;\n}\nexport default modalWindow;","import modalWindow from '../ModalWindow/ModalWindow.js';\n\nfunction noModeSelectedModal() {\n    const modeNotSelectedMessage = document.createElement('div');\n    modeNotSelectedMessage.innerHTML = \"Please select the mode first</br>Click outside the message box to close\";\n    modeNotSelectedMessage.style.padding = \"30px\";\n    modeNotSelectedMessage.style.color = \"white\";\n    modeNotSelectedMessage.style.backgroundColor = \"black\";\n    modeNotSelectedMessage.style.textAlign = \"center\";\n    modeNotSelectedMessage.style.fontSize = \"1.5rem\";\n    document.body.appendChild(modalWindow(modeNotSelectedMessage, removeModalWindow));\n}\n\n\nfunction removeModalWindow() {\n    document.body.removeChild(document.querySelector('.modal-window-bg'));\n}\n \nexport default noModeSelectedModal;","function displayRanking(listOfUsers) {\n    listOfUsers = listOfUsers.sort((a,b) => ((a.numberOfCorrectAnswers/a.numberOfTotalAnswers) < (b.numberOfCorrectAnswers/b.numberOfTotalAnswers)) ? 1: -1);\n\n    while(listOfUsers.length > 3){\n      listOfUsers.pop();\n    }\n\n  const ranking = document.createElement('div');\n  ranking.id = 'theBestPlayers';\n\n  const titleDiv = document.createElement('div');\n  const image = document.createElement('i');\n  image.className = 'fas fa-id-card-alt';\n  const title = document.createElement('p');\n  titleDiv.className = 'rankingTitle';\n  title.className = 'rankingTitle';\n  title.innerText = 'Mode Ranking';\n  titleDiv.appendChild(image);\n  titleDiv.appendChild(title);\n  ranking.appendChild(titleDiv);\n\n  const place = document.createElement('p');\n  place.className = 'header';\n  place.innerText = 'Place';\n  ranking.appendChild(place);\n\n  const player = document.createElement('p');\n  player.className = 'header';\n  player.innerText = 'Player';\n  ranking.appendChild(player);\n\n  const answered = document.createElement('p');\n  answered.className = 'header';\n  answered.innerText = 'Answered';\n  ranking.appendChild(answered);\n\n  const places = ['1st', '2nd', '3rd'];\n\n  listOfUsers.forEach((user, index) => {\n    const placeP = document.createElement('p');\n    placeP.innerText = places[index];\n    ranking.appendChild(placeP);\n    const playerP = document.createElement('p');\n    playerP.innerText = user.userName;\n    ranking.appendChild(playerP);\n    const pointsP = document.createElement('p');\n    \n    //check if number of correct answers is not 0\n    let percentageScore;\n    if (user.numberOfCorrectAnswers){\n      percentageScore = Math.round((user.numberOfCorrectAnswers/user.numberOfTotalAnswers)*100);\n    }\n    else{\n      percentageScore = 0;\n    }\n\n    pointsP.innerText = `${user.numberOfCorrectAnswers}/${user.numberOfTotalAnswers} (${percentageScore}%)`;\n    ranking.appendChild(pointsP);\n  });\n\n  return ranking;\n}\n\nexport default displayRanking;\n","import {getUserRankInLocalStorage} from '../../logic/UserRankInLocalStorage/UserRankInLocalStorage.js'\nimport noModeSelectedModal from '../QuizGameMode/NoModeSelectedModal.js'\nimport displayRanking from '../../Ranking';\n\nfunction generateRankingContainer() {\n    let ranking;\n\n    let selectedMode = 0;\n    try {\n        selectedMode = document.querySelector(\".active\").innerHTML;\n    } catch (error) {\n        noModeSelectedModal();\n    }\n\n    if (selectedMode != 0) {\n        const rankingData = getUserRankInLocalStorage(selectedMode);\n\n        if(rankingData.length >= 1 ){\n            const rankingDiv = displayRanking(rankingData);\n            ranking = rankingDiv;\n        }  \n        else{\n            const emptyRanking = document.createElement('div');\n            emptyRanking.id = \"emptyRanking\";\n            const emptyRankingText = document.createElement('h2');\n            emptyRankingText.innerText = `Leaderboard for the ${selectedMode} mode is empty...`\n            emptyRanking.appendChild(emptyRankingText); \n            ranking = emptyRanking;\n        }          \n    }\n    return ranking;\n}\n\nexport default generateRankingContainer;","const RULESRANKING = {\n    RankingDisplayed: \"Game Rules\",\n    RulesDisplayed: \"Hall of Fame\"\n}\n\nexport default RULESRANKING;","import {GameModes} from \"../../Consts.js\"\nimport generateRankingContainer from '../MainMenu/GenerateRanking.js'\nimport RULESRANKING from './RulesRankingButtonTexts.js'\n\nconst createMainMenuOptions = (optionFunction) => {\n        let options = GameModes;\n        let mainMenuDiv, menuButton, buttonText;\n\n        mainMenuDiv = document.createElement('div'); //create container for menu\n        mainMenuDiv.className = 'modeSelectorContainer';\n\n        //nested button onclick function for changing the active styling\n        const menuButtonOnclick = (event) => {\n            const buttons = document.querySelectorAll('.mainMenuButton');\n\n            //remove active class from all buttons\n            for (let i = 0; i < buttons.length; i++) {\n                if (buttons[i].classList.contains('active')) {\n                    buttons[i].classList.remove('active');\n                }\n            }\n            event.target.classList.add('active'); //set current button's class to active\n\n            //call callback function\n            const modeName = event.target.id;\n            const generatedNameAndRules = optionFunction(modeName);\n            let mainMenuDiv;\n            if (document.querySelector('.gameModeContainer')) {\n                mainMenuDiv = document.querySelector('.gameModeContainer').parentNode;\n            }\n            if (mainMenuDiv) {\n                //replace name div\n                let oldNameDiv = document.querySelector('.gameModeContainer');\n                oldNameDiv = mainMenuDiv.replaceChild(generatedNameAndRules.nameModeDiv, oldNameDiv);\n\n                //replace rules div with either new rules or ranking  \n                let oldRulesDiv;\n                let currentSelection;\n\n                //workaround for the button icon bug\n                try{\n                    currentSelection = document.querySelector('.white-icon-button > span').innerHTML;\n                }\n                catch{\n                    currentSelection = document.querySelector('.white-icon-button ').innerHTML;\n                }\n\n                if (currentSelection === RULESRANKING.RankingDisplayed) {\n                    oldRulesDiv = document.querySelector('.namerulesranking > div:nth-child(2)');\n                    oldRulesDiv = mainMenuDiv.replaceChild(generateRankingContainer(), oldRulesDiv);\n                } else {\n                    oldRulesDiv = document.querySelector('#howToPlay');\n                    oldRulesDiv = mainMenuDiv.replaceChild(generatedNameAndRules.rulesDiv, oldRulesDiv);\n                }\n            }\n        }\n\n    //create buttons and append to menu container\n    for (const property in options) {\n        menuButton = document.createElement('button');\n        menuButton.className = 'mainMenuButton';\n        menuButton.addEventListener(\"click\", menuButtonOnclick)\n        menuButton.id = options[property];\n        buttonText = document.createTextNode(options[property]);\n        menuButton.appendChild(buttonText);\n        mainMenuDiv.appendChild(menuButton);\n    }\n\n    //return container with buttons\n    return mainMenuDiv;\n}\n\nexport default createMainMenuOptions;","function logoStarWars() {\n    const logo = document.createElement('div');\n    logo.id = 'menu-logo';\n\n    const logoLink = document.createElement('a');\n    logoLink.href = 'index.html';\n    logo.appendChild(logoLink);\n\n    const logoImg = document.createElement('img');\n    logoImg.src = 'static/assets/ui/StarWarsLogo.png';\n    logoImg.alt = 'Star Wars Logo';\n    logoLink.appendChild(logoImg);\n\n    return logo;\n}\n\nexport default logoStarWars;","function peopleImageToRecognize(base64) {\n    if (typeof base64 !== 'string') throw Error('Pass base64 string as function argument');\n    const img = document.createElement('img');\n    img.src = `data:image/png;base64,${base64}`;\n    img.classList.add('border');\n    return img;\n}\nexport default peopleImageToRecognize;","import {GameModes} from '../../Consts.js'\n\nconst createGameModeName = (modeName) => {\n    const people = GameModes.PEOPLE;\n    const vehicles = GameModes.VEHICLES;\n    const starships = GameModes.STARSHIPS;\n    const start = 'Default';\n\n    const gameModeNameDiv = document.createElement('div');\n    gameModeNameDiv.className = 'gameModeContainer';\n    switch (modeName) {\n        case people:\n            gameModeNameDiv.textContent = 'Who is this character?';\n            break;\n        case vehicles:\n            gameModeNameDiv.textContent = 'Do you recognize this vehicle?';\n            break;\n        case starships:\n            gameModeNameDiv.textContent = 'Do you recognize this starship?';\n            break;\n        case start:\n            gameModeNameDiv.textContent = 'Star Wars Quiz';\n            break;\n        default:\n            throw 'Mode name argument was not passed to the createGameModeName component or the argument was invalid';\n    }\n    return gameModeNameDiv;\n}\n\nexport default createGameModeName;\n","function displayText(text) {\n  if (typeof text !== 'string') {\n    throw Error('This text area needs to have string data types only');\n  }\n\n  const gameRules = document.createElement('div');\n  gameRules.id = 'howToPlay';\n  const headerDiv = document.createElement('div');\n  headerDiv.className = 'headerDiv';\n\n  const image = document.createElement('i');\n  image.className = 'fas fa-graduation-cap';\n  headerDiv.appendChild(image);\n\n  const header = document.createElement('p');\n  header.innerText = 'Mode Rules';\n  headerDiv.appendChild(header);\n  gameRules.appendChild(headerDiv);\n\n  const rules = document.createElement('p');\n  rules.className = 'gameRulesP';\n  rules.innerText = text;\n  gameRules.appendChild(rules);\n\n  return gameRules;\n}\n\nexport default displayText;\n","const RULESTEXTS = {\n    PEOPLERULES: 'You have two minutes (2m) to answer as many questions as possible. During the game on each question you need to select who from Star Wars is showed on the left from available options.',\n    VEHICLESRULES: 'You have two minutes (2m) to answer as many questions as possible. During the game on each question you need to select which vehicle from Star Wars is showed on the left from available options.',\n    STARSHIPSRULES: 'You have two minutes (2m) to answer as many questions as possible. During the game on each question you need to select which starship from Star Wars is showed on the left from available options.',\n    DEFAULTRULES: 'Welcome young padawan! Select the game mode using the buttons above.' //for app initialization when no mode is selected\n}\n\nexport default RULESTEXTS;\n","import createGameModeName from '../GameModeName/GameModeName.js'\nimport displayText from '../../GameRules.js'\nimport {GameModes} from '../../Consts.js'\nimport RULESTEXTS from '../../ConstRulesTexts.js'\n\n//generate divs with mode name and rules with appropriate text\nconst generateModeNameAndRules = (modeName) => {\n    const people = GameModes.PEOPLE;\n    const vehicles = GameModes.VEHICLES;\n    const starships = GameModes.STARSHIPS;\n\n    let ruleText;\n    switch (modeName) {\n        case people:\n            ruleText = RULESTEXTS.PEOPLERULES;\n            break;\n        case vehicles:\n            ruleText = RULESTEXTS.VEHICLESRULES;\n            break;\n        case starships:\n            ruleText = RULESTEXTS.STARSHIPSRULES;\n            break;\n        default:\n            ruleText = RULESTEXTS.DEFAULTRULES;\n     }\n\n     \n\n    const nameModeDiv = createGameModeName(modeName);\n    const rulesDiv = displayText(ruleText);\n\n    const modeNameAndRules = {\n        nameModeDiv: nameModeDiv,\n        rulesDiv: rulesDiv\n    };\n\n    return modeNameAndRules;\n}\n\nexport default generateModeNameAndRules;","function redButton(label, onClick, runGameFunction) {\n    if (typeof label !== 'string') {\n      throw Error('Label should be a string.');\n    }\n\n    if (typeof onClick !== 'function'){\n      throw Error('OnClick should be a function.');\n    }\n    \n    const button = document.createElement('button');\n    button.className = 'button red-button';\n    button.innerText = label;\n    button.addEventListener('click', (e) => {\n      let selectedMode;\n      try{\n        selectedMode = document.querySelector(\".active\").innerHTML;\n      }\n      catch(error){}\n\n      onClick(runGameFunction, selectedMode);\n    }); \n    \n    return button;\n  }\n\n  export default redButton;","function whiteIconButton(label, icon, onClick) {\n    if (typeof label !== 'string') {\n      throw Error('Label is not a string.');\n    }\n\n    if (!(icon instanceof HTMLElement)) {\n      throw Error('Icon is not HTMLElement');\n    }\n\n    if (typeof onClick !== 'function'){\n      throw Error('OnClick is not a function.');\n    }\n\n    const button = document.createElement('button');\n    button.className = 'button white-icon-button';\n    const labelElement = document.createElement('span');\n    const labelElementContent = document.createTextNode(label);\n    labelElement.appendChild(labelElementContent);\n    button.appendChild(icon);\n    button.appendChild(labelElement);\n    button.addEventListener('click', (e) => {\n      onClick();\n    }); \n  \n    return button;\n  }\n\n  export default whiteIconButton;","async function getPersonById(id) {\n    const person = await fetch(`https://swapi.dev/api/people/${id}/`);\n    return person.json();\n}\n\nasync function getPersonImageBlobById(personId) {\n    const image = await fetch(`static/assets/img/modes/people/${personId}.jpg`)\n    return image.blob();\n}\n\nexport { getPersonById, getPersonImageBlobById };","async function getStarshipById(id) {\n    const starship = await fetch(`https://swapi.dev/api/starships/${id}/`);\n    return starship.json();\n}\n\n\nasync function getStarshipImageBlobById(starshipId) {\n    const image = await fetch(`static/assets/img/modes/starships/${starshipId}.jpg`);\n    return image.blob();\n}\n\nexport { getStarshipById, getStarshipImageBlobById };","async function getVehicleById(id) {\n    const vehicle = await fetch(`https://swapi.dev/api/vehicles/${id}/`);\n    return vehicle.json();\n}\n\nasync function getVehicleImageBlobById(vehicleId) {\n    const image = await fetch(`static/assets/img/modes/vehicles/${vehicleId}.jpg`);\n    return image.blob();\n}\n\nexport { getVehicleById, getVehicleImageBlobById };","import { GameModes } from \"../../Consts.js\";\nimport { getPersonById, getPersonImageBlobById } from \"../../apiconnection/PeopleClient.js\";\nimport { getStarshipById, getStarshipImageBlobById } from \"../../apiconnection/StarshipsClient.js\";\nimport { getVehicleById, getVehicleImageBlobById } from \"../../apiconnection/VehiclesClient.js\";\n\n\nasync function generateQuestions(gameMode) {\n    let answers;\n    let rightAnswer;\n    let imageBlob;\n    if (gameMode === GameModes.PEOPLE) {\n        const allowedIds = [];\n        const personAmount = 82;\n        const excludedId = 17;\n        for (let i = 1; i <= personAmount; i++) {\n            if (i === excludedId) continue;\n            allowedIds.push(i);\n        }\n\n        const questionsIds = drawQuestionsIds(allowedIds);\n        const peopleArray = await Promise.all([\n            getPersonById(questionsIds[0]),\n            getPersonById(questionsIds[1]),\n            getPersonById(questionsIds[2]),\n            getPersonById(questionsIds[3])\n        ]);\n        answers = peopleArray.map(person => person.name);\n        const { correctAnswer, correctAnswerId } = drawCorrectAnswer(questionsIds, answers);\n        rightAnswer = correctAnswer;\n        imageBlob = await getPersonImageBlobById(correctAnswerId);\n\n    } else if (gameMode === GameModes.STARSHIPS) {\n        const allowedIds = [5, 9, 10, 11, 12, 13, 15, 21, 22, 23, 27, 28, 29, 31, 39, 40, 41, 43, 47, 48];\n\n        const questionsIds = drawQuestionsIds(allowedIds);\n        const starshipsArray = await Promise.all([\n            getStarshipById(questionsIds[0]),\n            getStarshipById(questionsIds[1]),\n            getStarshipById(questionsIds[2]),\n            getStarshipById(questionsIds[3])\n        ])\n\n        answers = starshipsArray.map(starship => starship.name);\n        const { correctAnswer, correctAnswerId } = drawCorrectAnswer(questionsIds, answers);\n        rightAnswer = correctAnswer;\n        imageBlob = await getStarshipImageBlobById(correctAnswerId);\n\n\n    } else if (gameMode === GameModes.VEHICLES) {\n        const allowedIds = [4, 6, 7, 8, 14, 16, 18, 20, 24, 25, 26, 30, 33, 34, 35, 36, 37, 38, 42];\n\n        const questionsIds = drawQuestionsIds(allowedIds);\n        const vehiclesArray = await Promise.all([\n            getVehicleById(questionsIds[0]),\n            getVehicleById(questionsIds[1]),\n            getVehicleById(questionsIds[2]),\n            getVehicleById(questionsIds[3])\n        ])\n\n        answers = vehiclesArray.map(vehicle => vehicle.name);\n        const { correctAnswer, correctAnswerId } = drawCorrectAnswer(questionsIds, answers);\n        rightAnswer = correctAnswer;\n        imageBlob = await getVehicleImageBlobById(correctAnswerId)\n\n    } else {\n        throw new Error('Invalid game mode');\n    }\n    const imageBase64 = await convertBlobToBase64(imageBlob);\n    const questionObject = {\n        image: imageBase64,\n        answers: answers,\n        rightAnswer: rightAnswer,\n    }\n    return questionObject;\n}\nexport default generateQuestions;\n\n\nfunction drawQuestionsIds(allowedIdArray) {\n    const chosenIds = [];\n    for (let i = 0; i < 4; i++) {\n        const randomNumberIndex = Math.floor(Math.random() * allowedIdArray.length);\n        chosenIds.push(allowedIdArray[randomNumberIndex]);\n        allowedIdArray.splice(randomNumberIndex, 1);\n    }\n    return chosenIds;\n}\n\nfunction convertBlobToBase64(blob) {\n    return new Promise((resolve) => {\n        const reader = new FileReader();\n        reader.readAsDataURL(blob);\n        reader.onloadend = function() {\n            const base64data = reader.result.substr(reader.result.indexOf(',') + 1);\n            resolve(base64data);\n        }\n    });\n}\n\nfunction drawCorrectAnswer(questionsIds, questionsNames) {\n    const correctAnswerIdIndex = Math.floor(Math.random() * questionsIds.length);\n    const correctAnswer = questionsNames[correctAnswerIdIndex];\n    const correctAnswerId = questionsIds[correctAnswerIdIndex];\n    return { correctAnswer, correctAnswerId };\n}\n\nexport {convertBlobToBase64}","import {convertBlobToBase64} from '../../logic/questionsGenerator/QuestionsGenerator.js';\nimport {getPersonImageBlobById} from '../../apiconnection/PeopleClient.js';\n\n\nasync function returnImageBase64() {\n    const imageBlob = await getPersonImageBlobById('default');\n    const imageBase64 = await convertBlobToBase64(imageBlob);\n    return imageBase64;\n}\n\nexport {returnImageBase64};\n","import modalWindow from '../ModalWindow/ModalWindow.js';\n\nfunction apikeyModal(gamefunction, mode) {\n    let modalWindowContent = document.createElement('div');\n    modalWindowContent.className = \"apikey-modal-window\";\n\n    const textInput = document.createElement('input');\n    textInput.type = \"text\";\n    textInput.required = true;\n    textInput.placeholder = \"Google Vision API Key\";\n\n    const inputDescription = document.createElement('p');\n    inputDescription.innerHTML = \"Please put the Google Vision API key in the input field above or just click start to play with your own computer :)\";\n    const submitButton = document.createElement('button');\n    submitButton.innerHTML = \"START\"\n    submitButton.className = \"submit-btn\";\n\n    modalWindowContent.appendChild(textInput);\n    modalWindowContent.appendChild(inputDescription);\n    modalWindowContent.appendChild(submitButton);\n\n    submitButton.addEventListener('click', (e) => {\n            const apikey = textInput.value;            \n            gamefunction(apikey, mode);\n            removeModalWindow();         \n    })\n    document.body.appendChild(modalWindow(modalWindowContent,removeModalWindow));    \n}\n\n\n//function to remove modal\nfunction removeModalWindow() {\n    document.body.removeChild(document.querySelector('.modal-window-bg'));\n}\n\nexport default apikeyModal;","import createMainMenuOptions from \"../MainMenuOptions/MainMenuOptions.js\"\nimport logoStarWars from \"../LogoStarWars/LogoStarWars.js\"\nimport peopleImageToRecognize from \"../../uicomponents/PeopleImageToRecognize/PeopleImageToRecognize.js\"\nimport generateModeNameAndRules from './GenerateModeNameAndRules.js'\nimport {StartMode} from '../../Consts.js'\nimport redButton from '../RedButton/RedButton.js'\nimport whiteIconButton from '../WhiteIconButton/WhiteIconButton.js'\nimport {returnImageBase64} from './GetSampleImage.js'\nimport generateRankingContainer from './GenerateRanking.js'\nimport apikeyModal from './ApikeyModal'\n\nasync function mainMenu(runGameMode) {\n\n    //creating containers for main menu elements\n    const mainMenuDiv = document.createElement('div');\n    mainMenuDiv.className = 'mainMenu';\n\n    const header = document.createElement('div');\n    header.className = 'header';\n    mainMenuDiv.appendChild(header);\n\n    const mainsection = document.createElement('div');\n    mainsection.className = 'mainsection';\n    mainMenuDiv.appendChild(mainsection);\n\n    //creating logo, appending to the header\n    const logo = logoStarWars();\n    header.appendChild(logo);\n\n    //creating main menu options bar, appending to header\n    const mainMenuOptions = createMainMenuOptions(generateModeNameAndRules);\n    header.appendChild(mainMenuOptions);\n\n    //creating sample image using imported Justyna's functions, appending to main section\n    const image = document.createElement('div');\n    image.className = 'image';\n    let startImage = await returnImageBase64();\n    const imageToRecognize = peopleImageToRecognize(startImage);\n    image.appendChild(imageToRecognize);\n    mainsection.appendChild(image);\n\n    //creating mode name container and rules container with default texts\n    const nameRulesRanking = document.createElement('div');\n    nameRulesRanking.className = 'namerulesranking';\n    mainsection.appendChild(nameRulesRanking);\n\n    const modeNameAndRules = generateModeNameAndRules(StartMode);\n    nameRulesRanking.appendChild(modeNameAndRules.nameModeDiv);\n    nameRulesRanking.appendChild(modeNameAndRules.rulesDiv);\n\n    //creating buttons\n    const buttons = document.createElement('div');\n    buttons.className = 'buttons';\n    const icon = document.createElement('i');\n    icon.classList.add('fas', 'fa-users');\n    const rulesRankingButton = whiteIconButton('Hall of Fame', icon, switchRuleswithRanking);\n    \n    //Play the Game button\n    const playButton = redButton('Play the Game', apikeyModal, runGameMode);\n\n    //creating a 'spacer' div to separate the buttons\n    const buttonsSpacer = document.createElement('div');\n    buttonsSpacer.style.width = '2rem';\n    buttons.appendChild(rulesRankingButton);\n    buttons.appendChild(buttonsSpacer);\n    buttons.appendChild(playButton);\n    nameRulesRanking.appendChild(buttons);\n\n    //finally - returning full mainMenuDiv\n    return mainMenuDiv;\n}\n\n//callback function for hall of fame button to switch rules with ranking\nfunction switchRuleswithRanking() {\n    let RulesDisplayed = document.body.querySelector('#howToPlay');\n    let RankingDisplayed = document.body.querySelector('.namerulesranking > div:nth-child(2)');\n    let menuDiv = document.body.querySelector('.gameModeContainer').parentNode;\n    const buttonText = event.target;\n\n    if (RulesDisplayed) {\n        let rankingDiv = generateRankingContainer();\n        if(rankingDiv){\n            RulesDisplayed = menuDiv.replaceChild(rankingDiv, RulesDisplayed);\n            buttonText.innerHTML = 'Game Rules';\n        }\n    } else {\n        const isModeButtonActive = document.body.querySelector('.active');\n        let rules;\n        if (isModeButtonActive) {\n            rules = generateModeNameAndRules(isModeButtonActive.innerHTML);\n        } else {\n            rules = generateModeNameAndRules('Default');\n        }\n        RankingDisplayed = menuDiv.replaceChild(rules.rulesDiv, RankingDisplayed);\n        buttonText.innerHTML = 'Hall of Fame';\n    }\n}\n\n//remember it's an async function returned :)\nexport default mainMenu;","function generateTextTimerComponent() {\n    const timerDiv = document.createElement('div');\n    timerDiv.className = 'text-timer';\n    let gameTime = 120;\n    changeTimeFormatAndSaveIntoDiv(gameTime, timerDiv);\n\n    let interval = setInterval(() => {\n        gameTime--;\n        changeTimeFormatAndSaveIntoDiv(gameTime, timerDiv);\n        if (gameTime === 0) { clearInterval(interval); }\n    }, 1000);\n\n    return timerDiv;\n}\n\nfunction changeTimeFormatAndSaveIntoDiv(gameTime, timerDiv) {\n    const timeObject = convertGameTimeToMinutesAndSeconds(gameTime);\n    timerDiv.innerHTML = 'Time Left: ' + timeObject.minutes + 'm ' + timeObject.seconds + 's';\n}\n\nfunction convertGameTimeToMinutesAndSeconds(gameTimeInSeconds) {\n    const minutes = Math.floor(gameTimeInSeconds / 60);\n    const seconds = gameTimeInSeconds - minutes * 60;\n    return { minutes, seconds };\n}\n\nexport { generateTextTimerComponent };","function generateLightsaberTimerComponent() {\n    const lightsaberDiv = createLightsaberElement();\n    const progressDiv = lightsaberDiv.querySelector('.progress-bar');\n    const initialWidthOfProgressBar = 100;\n    progressDiv.style.width = `${initialWidthOfProgressBar}%`;\n\n    const totalGameTime = 120;\n    let gameTime = totalGameTime;\n\n    let interval = setInterval(() => {\n        gameTime--;\n        const width = gameTime * initialWidthOfProgressBar / totalGameTime;\n        progressDiv.style.width = `${width}%`;\n        if (gameTime === 0) { clearInterval(interval); }\n    }, 1000);\n\n    return lightsaberDiv;\n}\n\nfunction createLightsaberElement() {\n    const lightsaberDiv = document.createElement('div');\n    lightsaberDiv.className = 'lightsaber';\n    const handleDiv = document.createElement('div');\n    handleDiv.className = 'handle';\n    lightsaberDiv.appendChild(handleDiv);\n    const handleImage = document.createElement('img');\n    handleImage.src = \"static/assets/ui/LightsaberHandle.png\";\n    handleImage.alt = 'Handle image';\n    handleDiv.appendChild(handleImage);\n    const saberDiv = document.createElement('div');\n    saberDiv.className = 'saber';\n    lightsaberDiv.appendChild(saberDiv);\n    const progressDiv = document.createElement('div');\n    progressDiv.className = 'progress-bar';\n    saberDiv.appendChild(progressDiv);\n    return lightsaberDiv;\n}\n\nexport { generateLightsaberTimerComponent };","function displayAnswersComponent(possibleAnswers = [], correctAnswer = '', callback){\n\n  //Check passed arguments\n  if(possibleAnswers.length === 0) throw Error('Possible answers not passed');\n  if(correctAnswer.length === 0) throw Error('Correct answer not passed')\n  if(possibleAnswers.length !== 4) throw Error('Invalid number of answers');\n  possibleAnswers.forEach(answer => {\n    if(typeof answer !== 'string') throw Error('Possible answers must be strings');\n  });\n  if(typeof correctAnswer !== 'string') throw Error('Correct answer must be a string');\n\n  //Get buttons and check them\n  const buttons = document.querySelectorAll('.answers-component__button');\n  if(!buttons.length) throw Error('Answers component does not exist in DOM.');\n  if(buttons.length !== 4) throw Error('Invalid number of buttons.');\n\n  const maxLengthOfDisplayedAnswer = 20;\n  let isAnswered = false;\n\n  buttons.forEach( (button, index) => {\n    let answer = possibleAnswers[index];\n\n    //If a possible answer is too long shorten it and then add as a textContent to the button\n    if(answer.length > maxLengthOfDisplayedAnswer) {\n      answer = answer.substr(0,maxLengthOfDisplayedAnswer) + '...';\n    }\n    button.textContent = answer;\n\n    //Remove classes from buttons that could be a remains of the previous function calls\n    button.classList.remove('answers-component__button--correct', 'answers-component__button--wrong');\n\n    /* Add EventListener to each button\n       Check if answer was given before (prevent from accepting two or more answers)\n       If answer wasn't given before, check correctness and add respective class to button\n       Then invoke callback function\n    */\n    button.addEventListener('click', event => {\n      if(!isAnswered) {\n        isAnswered = true;\n        const givenAnswer = possibleAnswers[index];\n\n        if(givenAnswer === correctAnswer) {\n          event.target.classList.add('answers-component__button--correct');\n          callback(givenAnswer, true);\n        }\n        else {\n          event.target.classList.add('answers-component__button--wrong');\n          callback(givenAnswer, false);\n        }\n      }\n    })\n  });\n}\n\nfunction createAnswersComponent() {\n  //Function returns the DOM answers element\n  const numberOfButtons = 4;\n\n  //Create container for buttons\n  const answersComponent = document.createElement('div');\n  answersComponent.classList.add('answers-component')\n\n  //Create determined number of button elements\n  for(let i = 0; i < numberOfButtons; i++) {\n    const button = document.createElement('button');\n    button.classList.add('answers-component__button')\n    answersComponent.appendChild(button);\n  }\n  return answersComponent;\n}\n\nexport {createAnswersComponent, displayAnswersComponent}\n","export default function JaroWrinker(s1, s2) {\n    var m = 0;\n\n    // Exit early if either are empty.\n    if ( s1.length === 0 || s2.length === 0 ) {\n        return 0;\n    }\n\n    // Exit early if they're an exact match.\n    if ( s1 === s2 ) {\n        return 1;\n    }\n\n    var range     = (Math.floor(Math.max(s1.length, s2.length) / 2)) - 1,\n        s1Matches = new Array(s1.length),\n        s2Matches = new Array(s2.length);\n\n    for (let i = 0; i < s1.length; i++ ) {\n        var low  = (i >= range) ? i - range : 0,\n            high = (i + range <= s2.length) ? (i + range) : (s2.length - 1);\n\n        for (var j = low; j <= high; j++ ) {\n            if ( s1Matches[i] !== true && s2Matches[j] !== true && s1[i] === s2[j] ) {\n                ++m;\n                s1Matches[i] = s2Matches[j] = true;\n                break;\n            }\n        }\n    }\n\n    // Exit early if no matches were found.\n    if ( m === 0 ) {\n        return 0;\n    }\n\n    // Count the transpositions.\n    var k, n_trans = 0;\n\n    for (let i = 0; i < s1.length; i++ ) {\n        if ( s1Matches[i] === true ) {\n            for (let j = k; j < s2.length; j++ ) {\n                if ( s2Matches[j] === true ) {\n                    k = j + 1;\n                    break;\n                }\n            }\n\n            if ( s1[i] !== s2[j] ) {\n                ++n_trans;\n            }\n        }\n    }\n\n    var weight = (m / s1.length + m / s2.length + (m - (n_trans / 2)) / m) / 3,\n        l      = 0,\n        p      = 0.1;\n\n    if ( weight > 0.7 ) {\n        while ( s1[l] === s2[l] && l < 4 ) {\n            ++l;\n        }\n\n        weight = weight + l * p * (1 - weight);\n    }\n\n    return weight;\n}\n","import JaroWrinker from \"./JaroWrinker\";\n\nfunction answerCorrectness(correctAnswer, givenAnswer) {\n    if(typeof correctAnswer !== 'string' || typeof givenAnswer !== 'string') throw Error('Answers must be strings');\n    let similarity = JaroWrinker(correctAnswer, givenAnswer);\n    return similarity > 0.6;\n}\n\nexport default answerCorrectness;\n","import answerCorrectness from '../AnswerCorrectness/AnswerCorrectness';\n\nclass HumanPlayer {\n  constructor(name) {\n    this._name = name;\n    this._points = 0;\n    this._askedQuestions = 0;\n    this._activeQuestion = null;\n    this._answers = [];\n  }\n\n  get playerInfo() {\n    return {\n      name: this._name, \n      points: `${this._points}/${this._askedQuestions}`\n    };\n  }\n\n  get answersHistory() {\n    return this._answers;\n  }\n\n  askQuestion(question, callbacks) {\n    if (typeof question !== 'object' || question === null) throw Error('First argument must be an object');\n    if (!Array.isArray(callbacks)) throw Error('Second argument must be an array');\n    this._askedQuestions++;\n    this._activeQuestion = question;\n    callbacks.forEach((callback) => {callback(question)});\n  }\n\n  answerQuestion(answer, callbacks) {\n    if (typeof answer !== 'string') throw Error('First argument must be a string');\n    if (!Array.isArray(callbacks)) throw Error('Second argument must be an array');\n    this._answers.push(answer);\n    if (answerCorrectness(this._activeQuestion.rightAnswer, answer)) {\n      this._points++;\n    }\n    callbacks.forEach((callback) => {callback(this._activeQuestion, answer)});\n  }\n}\n\nfunction createPlayer(name) {\n  return new HumanPlayer(name);\n}\n\nexport default createPlayer;\n","import answerCorrectness from '../../AnswerCorrectness/AnswerCorrectness';\n\nfunction createPlayer() {\n    const player = {\n        _giveAnswerCallbacks: [],\n        _points: 0,\n        _askedQuestions: 0,\n        _answers: [],\n\n        getPoints() {\n            return this._points;\n        },\n\n        getAnswers() {\n            return this._answers;\n        },\n\n        getAskedQuestions() {\n            return this._askedQuestions;\n        },\n\n        onGiveAnswerDo(callbacks) {\n            const callbacksArray = Array.isArray(callbacks) ? callbacks : [callbacks];\n            if (callbacksArray.some(callback => typeof callback !== 'function')) {\n                throw Error('Given argument is neither function nor array of functions');\n            }\n            this._giveAnswerCallbacks.push(...callbacksArray);\n        },\n\n        answerQuestion(question) {\n            const answer = this._giveRandomAnswer(question.answers);\n            this._answers.push(answer);\n            this._askedQuestions++;\n            if (answerCorrectness(question.rightAnswer, answer)) {\n              this._points++;\n            }\n            this._giveAnswerCallbacks.forEach((callback) => {callback(answer, question)});\n\n            return answer;\n        },\n\n        _giveRandomAnswer(answers) {\n            const randomIndex = Math.floor(Math.random() * answers.length);\n\n            return answers[randomIndex];\n        }\n    };\n    \n    return player;\n} \n\nexport default createPlayer;","const FIRST_ARG_ERROR = 'First argument should be an array of objects. Each object should have defined following properties: human(string), computer(string), correct(string) and image(string).';\nconst SECOND_ARG_ERROR = 'Second argument should be function.';\n\nexport {FIRST_ARG_ERROR, SECOND_ARG_ERROR};","import {FIRST_ARG_ERROR, SECOND_ARG_ERROR} from './Errors.js';\nfunction gameOverModalWindowContent(answers, callback, gameMode){\n    // First argument should be array of answers\n    if (!Array.isArray(answers) || \n        !answers.every((answer) => {\n            return typeof answer.human === 'string' && typeof answer.computer === 'string' && typeof answer.correct === 'string' && typeof answer.image === 'string';\n        })) \n    {\n        throw Error(FIRST_ARG_ERROR);\n    }\n\n    // Second argument should be callback function\n    if (typeof callback !== 'function') {\n        throw Error(SECOND_ARG_ERROR);\n    }\n\n    const component = document.createElement('div');\n    component.className = 'game-over-win';\n    \n    // Main header\n    const gameOverH2 = document.createElement('h2');\n    gameOverH2.innerHTML = 'Game Over';\n    \n    // Summary paragraph\n    const gameOverParagraph = document.createElement('p');\n    const humanCorrect = answers.filter((answer) => answer.human === answer.correct);\n    const computerCorrect = answers.filter((answer) => answer.computer === answer.correct);\n    gameOverParagraph.innerHTML = `The force is strong in you young Padawan! During 2 minutes you have answered ${humanCorrect.length} / ${answers.length} questions. And Google guessed ${computerCorrect.length} / ${answers.length}.`;\n\n    // Main grid\n    const mainGrid = document.createElement('div');\n    \n    // Scrollable list\n    const listDiv = document.createElement('div');\n    listDiv.className = 'scrollable-list';\n    const listHeader = document.createElement('h3');\n    listHeader.innerHTML = 'Detailed answers';\n    const scrollableList = document.createElement('ul');\n    const firstItem = `\n        <li>\n            <div></div>\n            <div>You</div>\n            <div>Computer</div>\n            <div>Answer</div>\n        </li>\n    `;\n    scrollableList.innerHTML = firstItem + answers.map((answer) => \n        `<li>\n            <img height=\"100px\" src=\"data:image/png;base64,${answer.image}\">\n            <div class=\"${answer.human === answer.correct ? \"correct\" : \"wrong\"}\">${answer.human}</div>\n            <div class=\"${answer.computer === answer.correct ? \"correct\" : \"wrong\"}\">${answer.computer}</div>\n            <div>${answer.correct}</div>\n        </li>`\n    ).join('');\n    listDiv.appendChild(listHeader);\n    listDiv.appendChild(scrollableList);\n\n    // Yoda image\n    const yodaImage = document.createElement('img');\n    yodaImage.src = \"static/assets/ui/MasterYodaLeft.png\"\n    yodaImage.className = 'yoda'\n\n    // Text input\n    const textInput = document.createElement('input');\n    textInput.type = \"text\";\n    textInput.required = true;\n    textInput.placeholder = \"Your name\";\n\n    const inputDescription = document.createElement('p');\n    inputDescription.innerHTML = \"Please fill your name in order to receive eternal glory in whole Galaxy!\"\n\n    // Submit button\n    \n    const submitButton = document.createElement('button');\n    submitButton.addEventListener('click', (e) => {\n        if (textInput.value.length > 0) {\n            callback(textInput.value, answers.length, humanCorrect.length, gameMode);\n            if(component.parentElement && component.parentElement.parentElement) {\n                component.parentElement.parentElement.click();\n            }\n        }\n    })\n    submitButton.innerHTML = \"MAY THE FORCE BE WITH YOU!\"\n    submitButton.className = \"submit-btn\";\n\n    component.appendChild(gameOverH2);\n    component.appendChild(gameOverParagraph);\n    mainGrid.appendChild(listDiv);\n    mainGrid.appendChild(yodaImage);\n    mainGrid.appendChild(textInput);\n    mainGrid.appendChild(inputDescription);\n    component.appendChild(mainGrid);\n    component.appendChild(submitButton);\n    return component;\n}\n\nexport default gameOverModalWindowContent;","const FIRST_ARGUMENT_WRONG = 'First argument should be base64 string.';\nconst SECOND_ARGUMENT_WRONG = 'Second argument should be private key string.';\nexport { FIRST_ARGUMENT_WRONG, SECOND_ARGUMENT_WRONG };","var __self__ = (function (root) {\nfunction F() {\nthis.fetch = false;\nthis.DOMException = root.DOMException\n}\nF.prototype = root;\nreturn new F();\n})(typeof self !== 'undefined' ? self : this);\n(function(self) {\n\nvar irrelevant = (function (exports) {\n\n  var support = {\n    searchParams: 'URLSearchParams' in self,\n    iterable: 'Symbol' in self && 'iterator' in Symbol,\n    blob:\n      'FileReader' in self &&\n      'Blob' in self &&\n      (function() {\n        try {\n          new Blob();\n          return true\n        } catch (e) {\n          return false\n        }\n      })(),\n    formData: 'FormData' in self,\n    arrayBuffer: 'ArrayBuffer' in self\n  };\n\n  function isDataView(obj) {\n    return obj && DataView.prototype.isPrototypeOf(obj)\n  }\n\n  if (support.arrayBuffer) {\n    var viewClasses = [\n      '[object Int8Array]',\n      '[object Uint8Array]',\n      '[object Uint8ClampedArray]',\n      '[object Int16Array]',\n      '[object Uint16Array]',\n      '[object Int32Array]',\n      '[object Uint32Array]',\n      '[object Float32Array]',\n      '[object Float64Array]'\n    ];\n\n    var isArrayBufferView =\n      ArrayBuffer.isView ||\n      function(obj) {\n        return obj && viewClasses.indexOf(Object.prototype.toString.call(obj)) > -1\n      };\n  }\n\n  function normalizeName(name) {\n    if (typeof name !== 'string') {\n      name = String(name);\n    }\n    if (/[^a-z0-9\\-#$%&'*+.^_`|~]/i.test(name)) {\n      throw new TypeError('Invalid character in header field name')\n    }\n    return name.toLowerCase()\n  }\n\n  function normalizeValue(value) {\n    if (typeof value !== 'string') {\n      value = String(value);\n    }\n    return value\n  }\n\n  // Build a destructive iterator for the value list\n  function iteratorFor(items) {\n    var iterator = {\n      next: function() {\n        var value = items.shift();\n        return {done: value === undefined, value: value}\n      }\n    };\n\n    if (support.iterable) {\n      iterator[Symbol.iterator] = function() {\n        return iterator\n      };\n    }\n\n    return iterator\n  }\n\n  function Headers(headers) {\n    this.map = {};\n\n    if (headers instanceof Headers) {\n      headers.forEach(function(value, name) {\n        this.append(name, value);\n      }, this);\n    } else if (Array.isArray(headers)) {\n      headers.forEach(function(header) {\n        this.append(header[0], header[1]);\n      }, this);\n    } else if (headers) {\n      Object.getOwnPropertyNames(headers).forEach(function(name) {\n        this.append(name, headers[name]);\n      }, this);\n    }\n  }\n\n  Headers.prototype.append = function(name, value) {\n    name = normalizeName(name);\n    value = normalizeValue(value);\n    var oldValue = this.map[name];\n    this.map[name] = oldValue ? oldValue + ', ' + value : value;\n  };\n\n  Headers.prototype['delete'] = function(name) {\n    delete this.map[normalizeName(name)];\n  };\n\n  Headers.prototype.get = function(name) {\n    name = normalizeName(name);\n    return this.has(name) ? this.map[name] : null\n  };\n\n  Headers.prototype.has = function(name) {\n    return this.map.hasOwnProperty(normalizeName(name))\n  };\n\n  Headers.prototype.set = function(name, value) {\n    this.map[normalizeName(name)] = normalizeValue(value);\n  };\n\n  Headers.prototype.forEach = function(callback, thisArg) {\n    for (var name in this.map) {\n      if (this.map.hasOwnProperty(name)) {\n        callback.call(thisArg, this.map[name], name, this);\n      }\n    }\n  };\n\n  Headers.prototype.keys = function() {\n    var items = [];\n    this.forEach(function(value, name) {\n      items.push(name);\n    });\n    return iteratorFor(items)\n  };\n\n  Headers.prototype.values = function() {\n    var items = [];\n    this.forEach(function(value) {\n      items.push(value);\n    });\n    return iteratorFor(items)\n  };\n\n  Headers.prototype.entries = function() {\n    var items = [];\n    this.forEach(function(value, name) {\n      items.push([name, value]);\n    });\n    return iteratorFor(items)\n  };\n\n  if (support.iterable) {\n    Headers.prototype[Symbol.iterator] = Headers.prototype.entries;\n  }\n\n  function consumed(body) {\n    if (body.bodyUsed) {\n      return Promise.reject(new TypeError('Already read'))\n    }\n    body.bodyUsed = true;\n  }\n\n  function fileReaderReady(reader) {\n    return new Promise(function(resolve, reject) {\n      reader.onload = function() {\n        resolve(reader.result);\n      };\n      reader.onerror = function() {\n        reject(reader.error);\n      };\n    })\n  }\n\n  function readBlobAsArrayBuffer(blob) {\n    var reader = new FileReader();\n    var promise = fileReaderReady(reader);\n    reader.readAsArrayBuffer(blob);\n    return promise\n  }\n\n  function readBlobAsText(blob) {\n    var reader = new FileReader();\n    var promise = fileReaderReady(reader);\n    reader.readAsText(blob);\n    return promise\n  }\n\n  function readArrayBufferAsText(buf) {\n    var view = new Uint8Array(buf);\n    var chars = new Array(view.length);\n\n    for (var i = 0; i < view.length; i++) {\n      chars[i] = String.fromCharCode(view[i]);\n    }\n    return chars.join('')\n  }\n\n  function bufferClone(buf) {\n    if (buf.slice) {\n      return buf.slice(0)\n    } else {\n      var view = new Uint8Array(buf.byteLength);\n      view.set(new Uint8Array(buf));\n      return view.buffer\n    }\n  }\n\n  function Body() {\n    this.bodyUsed = false;\n\n    this._initBody = function(body) {\n      this._bodyInit = body;\n      if (!body) {\n        this._bodyText = '';\n      } else if (typeof body === 'string') {\n        this._bodyText = body;\n      } else if (support.blob && Blob.prototype.isPrototypeOf(body)) {\n        this._bodyBlob = body;\n      } else if (support.formData && FormData.prototype.isPrototypeOf(body)) {\n        this._bodyFormData = body;\n      } else if (support.searchParams && URLSearchParams.prototype.isPrototypeOf(body)) {\n        this._bodyText = body.toString();\n      } else if (support.arrayBuffer && support.blob && isDataView(body)) {\n        this._bodyArrayBuffer = bufferClone(body.buffer);\n        // IE 10-11 can't handle a DataView body.\n        this._bodyInit = new Blob([this._bodyArrayBuffer]);\n      } else if (support.arrayBuffer && (ArrayBuffer.prototype.isPrototypeOf(body) || isArrayBufferView(body))) {\n        this._bodyArrayBuffer = bufferClone(body);\n      } else {\n        this._bodyText = body = Object.prototype.toString.call(body);\n      }\n\n      if (!this.headers.get('content-type')) {\n        if (typeof body === 'string') {\n          this.headers.set('content-type', 'text/plain;charset=UTF-8');\n        } else if (this._bodyBlob && this._bodyBlob.type) {\n          this.headers.set('content-type', this._bodyBlob.type);\n        } else if (support.searchParams && URLSearchParams.prototype.isPrototypeOf(body)) {\n          this.headers.set('content-type', 'application/x-www-form-urlencoded;charset=UTF-8');\n        }\n      }\n    };\n\n    if (support.blob) {\n      this.blob = function() {\n        var rejected = consumed(this);\n        if (rejected) {\n          return rejected\n        }\n\n        if (this._bodyBlob) {\n          return Promise.resolve(this._bodyBlob)\n        } else if (this._bodyArrayBuffer) {\n          return Promise.resolve(new Blob([this._bodyArrayBuffer]))\n        } else if (this._bodyFormData) {\n          throw new Error('could not read FormData body as blob')\n        } else {\n          return Promise.resolve(new Blob([this._bodyText]))\n        }\n      };\n\n      this.arrayBuffer = function() {\n        if (this._bodyArrayBuffer) {\n          return consumed(this) || Promise.resolve(this._bodyArrayBuffer)\n        } else {\n          return this.blob().then(readBlobAsArrayBuffer)\n        }\n      };\n    }\n\n    this.text = function() {\n      var rejected = consumed(this);\n      if (rejected) {\n        return rejected\n      }\n\n      if (this._bodyBlob) {\n        return readBlobAsText(this._bodyBlob)\n      } else if (this._bodyArrayBuffer) {\n        return Promise.resolve(readArrayBufferAsText(this._bodyArrayBuffer))\n      } else if (this._bodyFormData) {\n        throw new Error('could not read FormData body as text')\n      } else {\n        return Promise.resolve(this._bodyText)\n      }\n    };\n\n    if (support.formData) {\n      this.formData = function() {\n        return this.text().then(decode)\n      };\n    }\n\n    this.json = function() {\n      return this.text().then(JSON.parse)\n    };\n\n    return this\n  }\n\n  // HTTP methods whose capitalization should be normalized\n  var methods = ['DELETE', 'GET', 'HEAD', 'OPTIONS', 'POST', 'PUT'];\n\n  function normalizeMethod(method) {\n    var upcased = method.toUpperCase();\n    return methods.indexOf(upcased) > -1 ? upcased : method\n  }\n\n  function Request(input, options) {\n    options = options || {};\n    var body = options.body;\n\n    if (input instanceof Request) {\n      if (input.bodyUsed) {\n        throw new TypeError('Already read')\n      }\n      this.url = input.url;\n      this.credentials = input.credentials;\n      if (!options.headers) {\n        this.headers = new Headers(input.headers);\n      }\n      this.method = input.method;\n      this.mode = input.mode;\n      this.signal = input.signal;\n      if (!body && input._bodyInit != null) {\n        body = input._bodyInit;\n        input.bodyUsed = true;\n      }\n    } else {\n      this.url = String(input);\n    }\n\n    this.credentials = options.credentials || this.credentials || 'same-origin';\n    if (options.headers || !this.headers) {\n      this.headers = new Headers(options.headers);\n    }\n    this.method = normalizeMethod(options.method || this.method || 'GET');\n    this.mode = options.mode || this.mode || null;\n    this.signal = options.signal || this.signal;\n    this.referrer = null;\n\n    if ((this.method === 'GET' || this.method === 'HEAD') && body) {\n      throw new TypeError('Body not allowed for GET or HEAD requests')\n    }\n    this._initBody(body);\n  }\n\n  Request.prototype.clone = function() {\n    return new Request(this, {body: this._bodyInit})\n  };\n\n  function decode(body) {\n    var form = new FormData();\n    body\n      .trim()\n      .split('&')\n      .forEach(function(bytes) {\n        if (bytes) {\n          var split = bytes.split('=');\n          var name = split.shift().replace(/\\+/g, ' ');\n          var value = split.join('=').replace(/\\+/g, ' ');\n          form.append(decodeURIComponent(name), decodeURIComponent(value));\n        }\n      });\n    return form\n  }\n\n  function parseHeaders(rawHeaders) {\n    var headers = new Headers();\n    // Replace instances of \\r\\n and \\n followed by at least one space or horizontal tab with a space\n    // https://tools.ietf.org/html/rfc7230#section-3.2\n    var preProcessedHeaders = rawHeaders.replace(/\\r?\\n[\\t ]+/g, ' ');\n    preProcessedHeaders.split(/\\r?\\n/).forEach(function(line) {\n      var parts = line.split(':');\n      var key = parts.shift().trim();\n      if (key) {\n        var value = parts.join(':').trim();\n        headers.append(key, value);\n      }\n    });\n    return headers\n  }\n\n  Body.call(Request.prototype);\n\n  function Response(bodyInit, options) {\n    if (!options) {\n      options = {};\n    }\n\n    this.type = 'default';\n    this.status = options.status === undefined ? 200 : options.status;\n    this.ok = this.status >= 200 && this.status < 300;\n    this.statusText = 'statusText' in options ? options.statusText : 'OK';\n    this.headers = new Headers(options.headers);\n    this.url = options.url || '';\n    this._initBody(bodyInit);\n  }\n\n  Body.call(Response.prototype);\n\n  Response.prototype.clone = function() {\n    return new Response(this._bodyInit, {\n      status: this.status,\n      statusText: this.statusText,\n      headers: new Headers(this.headers),\n      url: this.url\n    })\n  };\n\n  Response.error = function() {\n    var response = new Response(null, {status: 0, statusText: ''});\n    response.type = 'error';\n    return response\n  };\n\n  var redirectStatuses = [301, 302, 303, 307, 308];\n\n  Response.redirect = function(url, status) {\n    if (redirectStatuses.indexOf(status) === -1) {\n      throw new RangeError('Invalid status code')\n    }\n\n    return new Response(null, {status: status, headers: {location: url}})\n  };\n\n  exports.DOMException = self.DOMException;\n  try {\n    new exports.DOMException();\n  } catch (err) {\n    exports.DOMException = function(message, name) {\n      this.message = message;\n      this.name = name;\n      var error = Error(message);\n      this.stack = error.stack;\n    };\n    exports.DOMException.prototype = Object.create(Error.prototype);\n    exports.DOMException.prototype.constructor = exports.DOMException;\n  }\n\n  function fetch(input, init) {\n    return new Promise(function(resolve, reject) {\n      var request = new Request(input, init);\n\n      if (request.signal && request.signal.aborted) {\n        return reject(new exports.DOMException('Aborted', 'AbortError'))\n      }\n\n      var xhr = new XMLHttpRequest();\n\n      function abortXhr() {\n        xhr.abort();\n      }\n\n      xhr.onload = function() {\n        var options = {\n          status: xhr.status,\n          statusText: xhr.statusText,\n          headers: parseHeaders(xhr.getAllResponseHeaders() || '')\n        };\n        options.url = 'responseURL' in xhr ? xhr.responseURL : options.headers.get('X-Request-URL');\n        var body = 'response' in xhr ? xhr.response : xhr.responseText;\n        resolve(new Response(body, options));\n      };\n\n      xhr.onerror = function() {\n        reject(new TypeError('Network request failed'));\n      };\n\n      xhr.ontimeout = function() {\n        reject(new TypeError('Network request failed'));\n      };\n\n      xhr.onabort = function() {\n        reject(new exports.DOMException('Aborted', 'AbortError'));\n      };\n\n      xhr.open(request.method, request.url, true);\n\n      if (request.credentials === 'include') {\n        xhr.withCredentials = true;\n      } else if (request.credentials === 'omit') {\n        xhr.withCredentials = false;\n      }\n\n      if ('responseType' in xhr && support.blob) {\n        xhr.responseType = 'blob';\n      }\n\n      request.headers.forEach(function(value, name) {\n        xhr.setRequestHeader(name, value);\n      });\n\n      if (request.signal) {\n        request.signal.addEventListener('abort', abortXhr);\n\n        xhr.onreadystatechange = function() {\n          // DONE (success or failure)\n          if (xhr.readyState === 4) {\n            request.signal.removeEventListener('abort', abortXhr);\n          }\n        };\n      }\n\n      xhr.send(typeof request._bodyInit === 'undefined' ? null : request._bodyInit);\n    })\n  }\n\n  fetch.polyfill = true;\n\n  if (!self.fetch) {\n    self.fetch = fetch;\n    self.Headers = Headers;\n    self.Request = Request;\n    self.Response = Response;\n  }\n\n  exports.Headers = Headers;\n  exports.Request = Request;\n  exports.Response = Response;\n  exports.fetch = fetch;\n\n  return exports;\n\n}({}));\n})(__self__);\ndelete __self__.fetch.polyfill\nexports = __self__.fetch // To enable: import fetch from 'cross-fetch'\nexports.default = __self__.fetch // For TypeScript consumers without esModuleInterop.\nexports.fetch = __self__.fetch // To enable: import {fetch} from 'cross-fetch'\nexports.Headers = __self__.Headers\nexports.Request = __self__.Request\nexports.Response = __self__.Response\nmodule.exports = exports\n","import fetch from 'cross-fetch';\nasync function getLabel(base64Image, apiKey) {\n    const ENDPOINT = \"https://vision.googleapis.com/v1/images:annotate\";\n    const REQUEST_URL = ENDPOINT+'?key='+apiKey;\n    const MAX_RESULTS = 1;\n    const requestJSON = {\n        \"requests\": [\n            {\n                \"image\": {\n                    \"content\": base64Image,\n                },\n                \"features\": [\n                    {\n                        \"maxResults\": MAX_RESULTS,\n                        \"type\": \"WEB_DETECTION\"\n                    }\n                ]\n            }\n        ]\n    }\n    \n    const response = await fetch(REQUEST_URL, {\n        method: 'POST',\n        body: JSON.stringify(requestJSON)\n    });\n    \n    return response.json();\n}\nexport { getLabel };","import { FIRST_ARGUMENT_WRONG, SECOND_ARGUMENT_WRONG } from './Errors.js';\nimport { getLabel } from './GoogleClient.js';\n\nasync function imageRecognition(base64Image, apiKey) {\n    if (typeof base64Image !== 'string')\n        throw Error(FIRST_ARGUMENT_WRONG);\n    if (typeof apiKey !== 'string')\n        throw Error(SECOND_ARGUMENT_WRONG);\n    \n    const result = await getLabel(base64Image, apiKey);\n    if (result.error) {\n        throw Error(`${result.error.code}: ${result.error.message}`);\n    }\n    return result.responses[0].webDetection.webEntities[0].description;\n}\n\nexport { imageRecognition };","import answerCorrectness from '../../AnswerCorrectness/AnswerCorrectness';\nimport {imageRecognition} from '../../../googlevision/ImageRecognition/ImageRecognition';\n\nfunction createPlayer(apiKey) {\n    const player = {\n        _giveAnswerCallbacks: [],\n        _points: 0,\n        _askedQuestions: 0,\n        _answers: [],\n        _apiKey: apiKey,\n\n        getPoints() {\n            return this._points;\n        },\n\n        getAnswers() {\n            return this._answers;\n        },\n\n        getAskedQuestions() {\n            return this._askedQuestions;\n        },\n\n        onGiveAnswerDo(callbacks) {\n            const callbacksArray = Array.isArray(callbacks) ? callbacks : [callbacks];\n            if (callbacksArray.some(callback => typeof callback !== 'function')) {\n                throw Error('Given argument is neither function nor array of functions');\n            }\n            this._giveAnswerCallbacks.push(...callbacksArray);\n        },\n\n        async answerQuestion(question) {\n            let answer;\n            \n            try {\n                answer = await imageRecognition(question.image, this._apiKey); \n            } catch(error) {\n                answer = this._giveRandomAnswer(question.answers);\n            }\n            \n            this._answers.push(answer);\n            this._askedQuestions++;\n            if (answerCorrectness(question.rightAnswer, answer)) {\n              this._points++;\n            }\n            this._giveAnswerCallbacks.forEach((callback) => {callback(answer, question)});\n\n            return answer;\n        },\n\n        _giveRandomAnswer(answers) {\n            const randomIndex = Math.floor(Math.random() * answers.length);\n\n            return answers[randomIndex];\n        }\n    };\n    \n    return player;\n} \n\nexport default createPlayer;","import { displayAnswersComponent } from '../../AnswersComponent';\nimport createHumanPlayer from '../../logic/Players/HumanPlayer';\nimport createComputerPlayer from '../../logic/Players/ComputerPlayer/ComputerPlayer';\nimport peopleImageToRecognize from '../../uicomponents/PeopleImageToRecognize/PeopleImageToRecognize';\nimport generateQuestions from '../../logic/questionsGenerator/QuestionsGenerator';\nimport modalWindow from '../../uicomponents/ModalWindow/ModalWindow';\nimport gameOverModalWindowContent from '../../uicomponents/GameOverModalWindowContent/GameOverModalWindowContent';\nimport {addUserRankInLocalStorage} from '../UserRankInLocalStorage/UserRankInLocalStorage';\nimport createPlayer from '../../logic/Players/GooglePlayer/GooglePlayer.js'\n\nasync function launchGame(gameMode, apikey) {\n    const humanPlayer = createHumanPlayer(\"Gracz\");\n    let computerPlayer;\n\n    if(apikey){\n        computerPlayer = createPlayer(apikey);\n    }\n    else{\n        computerPlayer = createComputerPlayer();\n    }\n\n    const correctAnswers = [];\n    const images = [];\n    const gameTime = 120000;\n\n//in this functions the modal is created and displayed after the game time ends\n    setTimeout(function() {\n        const answersAndImages = createArrayOfObjectsWithAnswersAndImage(humanPlayer, computerPlayer, correctAnswers, images);\n        const modalContent = gameOverModalWindowContent(answersAndImages, saveInLocalStorageAndReload, gameMode);\n        document.body.appendChild(modalWindow(modalContent, removeModalWindow));\n    }, gameTime);\n\n    await generateQuestionsAndReplaceImage(gameMode);\n\n    async function handleUserAnswer(givenAnswer) {\n        humanPlayer.answerQuestion(givenAnswer, []);\n        await generateQuestionsAndReplaceImage(gameMode);\n    }\n\n    async function generateQuestionsAndReplaceImage(gameMode) {\n        const questionObject = await generateQuestions(gameMode);\n        const image = peopleImageToRecognize(questionObject.image);\n        const imageDiv = document.body.querySelector('.image');\n        if (imageDiv.hasChildNodes() === true) {\n            imageDiv.removeChild(imageDiv.lastChild);\n        }\n        imageDiv.appendChild(image);\n\n        //pushing the image and correct answer to separate arrays\n        images.push(questionObject.image);\n        correctAnswers.push(questionObject.rightAnswer)\n        humanPlayer.askQuestion(questionObject, []);\n        computerPlayer.answerQuestion(questionObject);\n        displayAnswersComponent(questionObject.answers, questionObject.rightAnswer, handleUserAnswer);\n    }\n}\n\n//function to create array of objects used to generate modal window\nfunction createArrayOfObjectsWithAnswersAndImage (humanPlayer, computerPlayer, correctAnswers, images){\n    let objArray = [];\n    let computerAnswers = computerPlayer.getAnswers();\n    let humanAnswers = humanPlayer.answersHistory;\n    \n    //iterate over all inputs and get the correct array structure\n    for (let i = 0; i < humanAnswers.length; i++){\n        let obj = {\n            human: \"\",\n            computer: \"\",\n            correct: \"\",\n            image: \"\"\n        };\n\n        obj.human = humanAnswers[i];\n        obj.computer = computerAnswers[i];\n        obj.correct = correctAnswers[i];\n        obj.image = images[i];\n        objArray.push(obj);\n    }\n    return objArray;\n}\n\n\nfunction saveInLocalStorageAndReload(name, humanAnswers, humanCorrect, mode) {\n    const obj = {\n        gameMode: mode,\n        userName: name, \n        numberOfCorrectAnswers: humanCorrect, \n        numberOfTotalAnswers: humanAnswers\n    };    \n    if(obj.numberOfTotalAnswers > 0){\n        addUserRankInLocalStorage(obj);\n    }    \n    document.body.removeChild(document.querySelector('.modal-window-bg'));\n}\n\nfunction removeModalWindow() {\n    location.reload();\n}\n\nexport default launchGame;","import {generateTextTimerComponent} from '../TextTimer/TextTimer.js';\nimport {generateLightsaberTimerComponent} from '../LightsaberTimer/LightsaberTimer.js'\nimport {createAnswersComponent} from '../../AnswersComponent.js'\nimport noModeSelectedModal from './NoModeSelectedModal.js'\nimport launchGame from '../../logic/LaunchTheGame/LaunchTheGame.js'\n\nasync function quizGameMode(apikey) {\n\n    //define the selected mode - by checking the button's innerHTML\n    //if no button is selected - display modal\n    let selectedMode = 0;\n    try {\n        selectedMode = document.querySelector(\".active\").innerHTML;\n    } catch (error) {\n        noModeSelectedModal();        \n    }\n\n    //if any mode was selected then run the game, otherwise do nothing\n    if (selectedMode != 0) {\n\n        //create a container for lightsaber and timer\n        const saberAndTimerContainer = document.createElement('div');\n        saberAndTimerContainer.className = 'saberAndTimerContainer';\n        document.body.querySelector('.mainMenu').appendChild(saberAndTimerContainer);\n\n        //display a lightsaber\n        const saberDiv = generateLightsaberTimerComponent();\n        saberAndTimerContainer.appendChild(saberDiv);      \n\n        //display a text timer below\n        const timerDiv = generateTextTimerComponent();\n        saberAndTimerContainer.appendChild(timerDiv);\n\n        //inject the answers component and replace the how to div or rulesdiv\n        const mainSection = document.body.querySelector('.namerulesranking');\n        let answersTargetContainer = document.body.querySelector('.namerulesranking > div:nth-child(2)');\n        const answersComponent = createAnswersComponent();\n        const answersContainer = document.createElement('div');\n        answersContainer.className = \"answersContainer\";\n        answersContainer.appendChild(answersComponent);\n        answersTargetContainer = mainSection.replaceChild(answersContainer,answersTargetContainer);\n\n        //remove the bottom buttons\n        mainSection.removeChild(mainSection.querySelector('.buttons'));\n\n        //disable the possibility to change the mode selection by replacing buttons with onclick with empty ones\n        const mainMenuButtons = document.querySelector('.modeSelectorContainer');\n        const newMainMenuButtons = mainMenuButtons.cloneNode(true);\n        mainMenuButtons.parentNode.replaceChild(newMainMenuButtons, mainMenuButtons);\n\n        //run the game! game will return the content of the modal window\n        try{\n            await launchGame(selectedMode, apikey);\n        }\n        catch (error){\n            console.log(error);\n            // console.log(\"Use correct game function in Quiz Game Mode component!\");\n        }\n    }\n}\n\nexport default quizGameMode;","import mainMenu from './uicomponents/MainMenu/MainMenu.js';\nimport quizGameMode from './uicomponents/QuizGameMode/QuizGameMode.js'\n\nexport async function App({ options }) {\n    document.body.appendChild(await mainMenu(quizGameMode));   \n};\n","import 'regenerator-runtime/runtime'; //async/await with Parcel\nimport { App } from './app/App.js';\n\n// const ONE_SECOND_MILLIS = 1000;\n// const SW_API_BASE_URL = process.env.SW_API_BASE_URL || 'https://swapi.dev/api';\n// const QUIZ_MAX_TIME = process.env.QUIZ_MAX_TIME_SECONDS\n//   ? process.env.QUIZ_MAX_TIME_SECONDS * ONE_SECOND_MILLIS\n//   : 120 * ONE_SECOND_MILLIS;\n\nwindow.onload = () =>\n  App({\n    // options: { swApiBaseUrl: SW_API_BASE_URL, quizMaxTime: QUIZ_MAX_TIME },\n  });\n"]}